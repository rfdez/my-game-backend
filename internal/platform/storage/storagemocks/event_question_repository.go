// Code generated by mockery v2.10.4. DO NOT EDIT.

package storagemocks

import (
	context "context"

	mygame "github.com/rfdez/my-game-backend/internal"
	mock "github.com/stretchr/testify/mock"
)

// EventQuestionRepository is an autogenerated mock type for the EventQuestionRepository type
type EventQuestionRepository struct {
	mock.Mock
}

// SearchByEventID provides a mock function with given fields: _a0, _a1
func (_m *EventQuestionRepository) SearchByEventID(_a0 context.Context, _a1 mygame.EventID) ([]mygame.EventQuestion, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []mygame.EventQuestion
	if rf, ok := ret.Get(0).(func(context.Context, mygame.EventID) []mygame.EventQuestion); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]mygame.EventQuestion)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, mygame.EventID) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
